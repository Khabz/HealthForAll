@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home Page";
    var user = new ApplicationUser();
    var model = new HomeViewModel
    {
        CurrentUser = new HomeViewModel.UserRestModel(),
        NewMeal = new HomeViewModel.NewMealModel
        {
            Title = "Let's make a meal plan.",
            State = "meal-plan",
            MealDate = DateTime.Now,
            NumberOfPeople = 1,
            SuggestedMeals = new List<object>(),
            SelectedMeal = new object()
        }
    };
    if (User.Identity.IsAuthenticated)
    {
        user = await UserManager.GetUserAsync(User);
        model.CurrentUser.Id = user.Id;
        model.CurrentUser.FirstName = user.FirstName;
        model.CurrentUser.LastName = user.LastName;
        model.CurrentUser.Gender = user.Gender;
        model.CurrentUser.MembershipType = user.MembershipType;
    }
}

<partial name="_TopNavigationPartial" />
@if (User.Identity.IsAuthenticated)
{
    if (user.MembershipType == MembershipType.Patient)
    {
        @section styles {
            <link href="~/lib/here/css/mapsjs-ui.css" type="text/css" rel="stylesheet" />
        }
        <div id="app" class="c02">
            <div class="c02_container">
                <div class="c02_block">
                    <div class="c02_title">GET STARTED</div>
                    <h4 class="c02_h3">
                        Request For Your Personalized Healthy Meal Plan
                    </h4>
                    <div class="c02_check_wrap">
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">Personalized For Income, Making Health Eating Affordable</p>
                        </div>
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">Recommendations From Certified Dietitians</p>
                        </div>
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">All Meal Ingrediates Found In Stores Near You.</p>
                        </div>
                    </div>
                    <a href="#" data-toggle="modal" data-target="#newMealPlanModal" class="c02_button w-inline-block">
                        <div class="c02_button_text">Get Meal Plan</div>
                        <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c47809893e4_arrow-right.svg" width="17" alt="" class="c02_button_image">
                    </a>
                </div>
                <div class="c02_block_image">
                    <img src="~/img/img_001.png" alt="" class="c02_image">
                </div>
            </div>
            <!-- Modals -->
            <div class="modal fade" id="newMealPlanModal" tabindex="-1" role="dialog" aria-labelledby="newMealPlanModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-body p-0">
                            <div class="m08">
                                <div class="m08_image w-clearfix" style="height: 90vh">
                                    <div class="m08_social" v-if="store.state.model.new_meal.state === 'selected-meal-plan'" v-on:click="showMap">
                                        <img src="https://assets.website-files.com/5aed5f7ff167d632686865b0/5aefaa1f9cabc36f3ea583e0_heart.svg" width="16" alt="" class="m08_icon">
                                        <a href="#" class="m08_social_count">View Shops</a>
                                    </div>
                                </div>
                                <div class="m08_content">
                                    <h5 class="form05_h5">{{ store.state.model.new_meal.title }}</h5>
                                    <div class="form05_form_block w-form" v-if="store.state.model.new_meal.state === 'meal-plan' && !store.state.model.is_loading">
                                        <form class="form05_form">
                                            <div class="form05_wrap">
                                                <label class="form05_title">Hey, what is your budget? R</label>
                                                <input type="number" v-model="store.state.model.new_meal.budget_amount" placeholder="E.g 440.50 " class="form05_input w-input" />
                                            </div>
                                            <div class="form05_wrap">
                                                <label class="form05_title">How many people will this meal cover?</label>
                                                <input type="number" v-model="store.state.model.new_meal.number_of_people" placeholder="E.g 1 " class="form05_input w-input" />
                                            </div>
                                            <div class="form05_wrap">
                                                <label class="form05_title">When will you be having this meal?</label>
                                                <input type="date" v-model="store.state.model.new_meal.meal_date" placeholder="22/01/2019 22:96" class="form05_input w-input" />
                                            </div>
                                            <button type="button" v-on:click="getSuggestedMeals()" class="form05_button w-button">Suggest Meals</button>
                                        </form>
                                    </div>
                                    <div class="form05_form_block w-form w-100" v-else-if="store.state.model.new_meal.state === 'select-meal-plan' && !store.state.model.is_loading">
                                        <div class="fe09_item_wrap w-100 clickable" v-for="item in store.state.model.new_meal.suggested_meals" v-bind="item" v-bind:key="item.id"
                                             v-on:click="setSuggestedMeal(item)">
                                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5d3a41ce71235b40db30f60a_cafe.svg" alt="" class="fe09_icon">
                                            <div class="w-100">
                                                <div class="fe09_text">{{ item.foodName }}</div>
                                                <div class="fe09_text">R {{ item.price }}</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form05_form_block w-form w-100" v-else-if="store.state.model.new_meal.state === 'selected-meal-plan' && !store.state.model.is_loading">
                                        <div class="fe09_item_wrap w-100">
                                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5d3a41ce71235b40db30f60a_cafe.svg" alt="" class="fe09_icon">
                                            <div class="w-100">
                                                <div class="fe09_text">{{ store.state.model.new_meal.selected_meal.foodName }}</div>
                                                <div class="fe09_text">R {{ store.state.model.new_meal.selected_meal.price }}</div>
                                            </div>
                                        </div>
                                        <div class="w-100">
                                            <div class="tag_d mt-2 mb-2">
                                                <div class="tag_circle_d">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.carbohydrate }}</div>
                                                </div>
                                                <div class="tag_d_text">Carbohydrates</div>
                                            </div>
                                            <div class="tag-s mt-2 mb-2">
                                                <div class="div_block_09">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.energy }}</div>
                                                </div>
                                                <div class="tag_s_text">Energy</div>
                                            </div>
                                            <div class="tag_p mt-2 mb-2">
                                                <div class="tag_circle_p">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.fibre }}</div>
                                                </div>
                                                <div class="tag_p_text">Fibre</div>
                                            </div>
                                            <div class="tag_w mt-2 mb-2">
                                                <div class="tag-cirle-w">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.liqids }}</div>
                                                </div>
                                                <div class="tag-w-text">Liquids</div>
                                            </div>
                                            <div class="tag-e mt-2 mb-2">
                                                <div class="tag-cirle-e">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.protein }}</div>
                                                </div>
                                                <div class="tag-e-text">Proteins</div>
                                            </div>
                                        </div>
                                        <button type="button" v-on:click="submitMeal()" class="form05_button w-button">Submit Meal</button>
                                    </div>
                                    <div v-else-if="store.state.model.is_loading" class="text-center w-100">
                                        <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="singleSourceOfTruth" class="d-none">@JsonConvert.SerializeObject(model)</div>

        @section scripts {
            <script type="text/javascript" src="~/lib/here/js/mapsjs-core.js"></script>
            <script type="text/javascript" src="~/lib/here/js/mapsjs-service.js"></script>
            <script type="text/javascript" src="~/lib/here/js/mapsjs-ui.js"></script>
            <script type="text/javascript" src="~/lib/here/js/mapsjs-mapevents.js"></script>
            <script type="text/javascript" src="~/lib/here/js/mapsjs-clustering.js"></script>
            <script type="text/javascript" src="~/lib/here/js/mapsjs-datalens.js"></script>
            <script type="text/javascript" src="~/lib/d3js/js/d3.js"></script>
            <script src="~/lib/vue/vue.js"></script>
            <script>
                var app = new Vue({
                    el: "#app",
                    data: {
                        store: {
                            state: {},
                            setModel(newValue) {
                                this.state.model = newValue;
                            },
                            setIsLoading(newValue) {
                                this.state.model.is_loading = newValue;
                            }
                        }
                    },
                    methods: {
                        getSuggestedMeals() {
                            this.store.setIsLoading(true);
                            this.store.state.model.new_meal.title = "Looking for suggested meals.";
                            this.$forceUpdate();
                            let self = this;
                            $.ajax({
                                type: 'GET',
                                crossDomain: true,
                                contentType: "application/json",
                                url: '/api/MealPlan',
                                success: function (data) {
                                    self.store.state.model.new_meal.title = "Select A Meal Below."
                                    self.store.setIsLoading(false);
                                    self.store.state.model.new_meal.suggested_meals = data;
                                    self.store.state.model.new_meal.state = "select-meal-plan";
                                    self.$forceUpdate();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    self.store.setIsLoading(false);
                                    self.$forceUpdate();
                                }
                            });
                        },
                        setSuggestedMeal(item) {
                            this.store.state.model.new_meal.selected_meal = item;
                            this.store.state.model.new_meal.title = "One more step.";
                            this.store.state.model.new_meal.state = "selected-meal-plan";
                            this.$forceUpdate();
                        },
                        showMap() {
                            let app_id = "JhE0slEAzCuJc13lUwYa";
                            let app_code = "fba0yCgDHLv1L_q1neW4b-gO0I7UzUfVAT9f2QgxHvg";
                            let platform = new H.service.Platform({
                                app_id,
                                app_code,
                                useCIT: true,
                                useHTTPS: true
                            });
                            const pixelRatio = devicePixelRatio > 1 ? 2 : 1;
                            let defaultLayers = platform.createDefaultLayers({
                                tileSize: 256 * pixelRatio
                            });
                            const layers = platform.createDefaultLayers({
                              tileSize: 256 * pixelRatio,
                              ppi: pixelRatio > 1 ? 320 : 72
                            });
                            console.log(layers);
                        },
                        submitMeal() {
                            this.store.setIsLoading(true);
                            this.store.state.model.new_meal.title = "Submiting your meal plan.";
                            this.$forceUpdate();
                            let self = this;
                            let model = {
                                user_id: this.store.state.model.current_user.id,
                                budget_amount: this.store.state.model.new_meal.budget_amount,
                                meal_id: this.store.state.model.new_meal.selected_meal.id,
                                meal_date: this.store.state.model.new_meal.meal_date,
                                dependents: this.store.state.model.new_meal.number_of_people
                            }
                            $.ajax({
                                type: 'POST',
                                crossDomain: true,
                                data: JSON.stringify(model),
                                contentType: "application/json",
                                url: '/api/UserMealPlan',
                                success: function (data) {
                                    self.store.state.model.new_meal.title = "Let's make a meal plan.";
                                    self.store.state.model.new_meal.state = "meal-plan";
                                    self.store.setIsLoading(false);
                                    $('#newMealPlanModal').modal("toggle");
                                    self.$forceUpdate();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    self.store.setIsLoading(false);
                                    self.store.state.model.new_meal.title = "Something Went Wrong."
                                    self.$forceUpdate();
                                }
                            });
                        }
                    },
                    mounted() {
                    },
                    beforeMount() {
                        let model = JSON.parse($('#singleSourceOfTruth').text());
                        this.store.setModel(model);
                    }
                });
            </script>
        }
    }

}
else
{

}

