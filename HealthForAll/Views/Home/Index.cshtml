@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home Page";
    var user = new ApplicationUser();
    var model = new HomeViewModel
    {
        CurrentUser = new HomeViewModel.UserRestModel(),
        NewMeal = new HomeViewModel.NewMealModel
        {
            Title = "Let's make a meal plan.",
            State = "meal-plan",
            MealDate = DateTime.Now,
            NumberOfPeople = 1,
            SuggestedMeals = new List<object>(),
            SelectedMeal = new object()
        }
    };
    if (User.Identity.IsAuthenticated)
    {
        user = await UserManager.GetUserAsync(User);
        model.CurrentUser.Id = user.Id;
        model.CurrentUser.FirstName = user.FirstName;
        model.CurrentUser.LastName = user.LastName;
        model.CurrentUser.Gender = user.Gender;
        model.CurrentUser.MembershipType = user.MembershipType;
    }
}

<partial name="_TopNavigationPartial" />
@if (User.Identity.IsAuthenticated)
{
    if (user.MembershipType == MembershipType.Patient)
    {
        @section styles {
            <link rel="stylesheet" type="text/css" href="https://js.cit.api.here.com/v3/3.0/mapsjs-ui.css" />
            <style>
                .info-bubble {
                    opacity: 0.75;
                    padding: 0 5px;
                    pointer-events: none;
                }

                .info-bubble .info-bubble-title {
                    font-size: 15px;
                    margin-left: 2px;
                }

                .info-bubble .info-bubble-label {
                    font-size: 10px;
                    opacity: 0.7;
                    margin-left: 2px;
                }

                .info-bubble .H_ib_close {
                    display: none;
                }

                .info-bubble .H_ib_body {
                    padding: 0;
                }
            </style>
        }
        <div id="app" class="c02">
            <div class="c02_container">
                <div class="c02_block">
                    <div class="c02_title">GET STARTED</div>
                    <h4 class="c02_h3">
                        Request For Your Personalized Healthy Meal Plan
                    </h4>
                    <div class="c02_check_wrap">
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">Personalized For Income, Making Health Eating Affordable</p>
                        </div>
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">Recommendations From Certified Dietitians</p>
                        </div>
                        <div class="c02_check">
                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c69709893e1_check.svg" width="21" alt="" class="c02_check_icon">
                            <p class="c02_check_text">All Meal Ingrediates Found In Stores Near You.</p>
                        </div>
                    </div>
                    <a href="#" data-toggle="modal" data-target="#newMealPlanModal" class="c02_button w-inline-block">
                        <div class="c02_button_text">Get Meal Plan</div>
                        <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5cbc1cadfad96c47809893e4_arrow-right.svg" width="17" alt="" class="c02_button_image">
                    </a>
                </div>
                <div class="c02_block_image">
                    <img src="~/img/img_001.png" alt="" class="c02_image">
                </div>
            </div>
            <!-- Modals -->
            <div class="modal fade" id="newMealPlanModal" tabindex="-1" role="dialog" aria-labelledby="newMealPlanModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-body p-0">
                            <div class="m08">
                                <div class="m08_image w-clearfix dl-map" style="height: 90vh">
                                    <div class="m08_social" v-if="store.state.model.new_meal.state === 'selected-meal-plan' && !store.state.model.is_map_showing" v-on:click="showMap">
                                        <img src="https://assets.website-files.com/5aed5f7ff167d632686865b0/5aefaa1f9cabc36f3ea583e0_heart.svg" width="16" alt="" class="m08_icon">
                                        <a href="#" class="m08_social_count">View Shops</a>
                                    </div>
                                </div>
                                <div class="m08_content">
                                    <h5 class="form05_h5">{{ store.state.model.new_meal.title }}</h5>
                                    <div class="form05_form_block w-form" v-if="store.state.model.new_meal.state === 'meal-plan' && !store.state.model.is_loading">
                                        <form class="form05_form">
                                            <div class="form05_wrap">
                                                <label class="form05_title">Hey, what is your budget? R</label>
                                                <input type="number" v-model="store.state.model.new_meal.budget_amount" placeholder="E.g 440.50 " class="form05_input w-input" />
                                            </div>
                                            <div class="form05_wrap">
                                                <label class="form05_title">How many people will this meal cover?</label>
                                                <input type="number" v-model="store.state.model.new_meal.number_of_people" placeholder="E.g 1 " class="form05_input w-input" />
                                            </div>
                                            <div class="form05_wrap">
                                                <label class="form05_title">When will you be having this meal?</label>
                                                <input type="date" v-model="store.state.model.new_meal.meal_date" placeholder="22/01/2019 22:96" class="form05_input w-input" />
                                            </div>
                                            <button type="button" v-on:click="getSuggestedMeals()" class="form05_button w-button">Suggest Meals</button>
                                        </form>
                                    </div>
                                    <div class="form05_form_block w-form w-100" v-else-if="store.state.model.new_meal.state === 'select-meal-plan' && !store.state.model.is_loading">
                                        <div class="fe09_item_wrap w-100 clickable" v-for="item in store.state.model.new_meal.suggested_meals" v-bind="item" v-bind:key="item.id"
                                             v-on:click="setSuggestedMeal(item)">
                                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5d3a41ce71235b40db30f60a_cafe.svg" alt="" class="fe09_icon">
                                            <div class="w-100">
                                                <div class="fe09_text">{{ item.foodName }}</div>
                                                <div class="fe09_text">R {{ item.price }}</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form05_form_block w-form w-100" v-else-if="store.state.model.new_meal.state === 'selected-meal-plan' && !store.state.model.is_loading">
                                        <div class="fe09_item_wrap w-100">
                                            <img src="https://assets.website-files.com/5cbc1cadfad96c3229989372/5d3a41ce71235b40db30f60a_cafe.svg" alt="" class="fe09_icon">
                                            <div class="w-100">
                                                <div class="fe09_text">{{ store.state.model.new_meal.selected_meal.foodName }}</div>
                                                <div class="fe09_text">R {{ store.state.model.new_meal.selected_meal.price }}</div>
                                            </div>
                                        </div>
                                        <div class="w-100">
                                            <div class="tag_d mt-2 mb-2">
                                                <div class="tag_circle_d">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.carbohydrate }}</div>
                                                </div>
                                                <div class="tag_d_text">Carbohydrates</div>
                                            </div>
                                            <div class="tag-s mt-2 mb-2">
                                                <div class="div_block_09">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.energy }}</div>
                                                </div>
                                                <div class="tag_s_text">Energy</div>
                                            </div>
                                            <div class="tag_p mt-2 mb-2">
                                                <div class="tag_circle_p">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.fibre }}</div>
                                                </div>
                                                <div class="tag_p_text">Fibre</div>
                                            </div>
                                            <div class="tag_w mt-2 mb-2">
                                                <div class="tag-cirle-w">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.liqids }}</div>
                                                </div>
                                                <div class="tag-w-text">Liquids</div>
                                            </div>
                                            <div class="tag-e mt-2 mb-2">
                                                <div class="tag-cirle-e">
                                                    <div class="tag_text">{{ store.state.model.new_meal.selected_meal.protein }}</div>
                                                </div>
                                                <div class="tag-e-text">Proteins</div>
                                            </div>
                                        </div>
                                        <button type="button" v-on:click="submitMeal()" class="form05_button w-button">Submit Meal</button>
                                    </div>
                                    <div v-else-if="store.state.model.is_loading" class="text-center w-100">
                                        <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="singleSourceOfTruth" class="d-none">@JsonConvert.SerializeObject(model)</div>

        @section scripts {
            <script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-core.js"></script>
            <script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-service.js"></script>
            <script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-ui.js"></script>
            <script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>
            <script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-clustering.js"></script>
            <script type="text/javascript" src="https://js.cit.datalens.api.here.com/2.6.1/mapsjs-datalens.js"></script>
            <script type="text/javascript" src="https://d3js.org/d3.v4.min.js"></script>
            <script>
                (function () {
                    'use strict';

                    let venueIcons = {};

                    venueIcons['Bildende Kunst'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#b11f8e;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#78005f;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-101.92" cy="31.51" r="8.34" gradientTransform="translate(173.29 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>arts-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.51" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M18,7.68a9.59,9.59,0,0,1,5.16,1.37,6.65,6.65,0,0,1,3.4,6.16,10.71,10.71,0,0,1-.65,3.45A3.22,3.22,0,0,1,22.19,21c-.72-.08-1.43-.19-2.15-.26a4.8,4.8,0,0,0-.91,0,2.13,2.13,0,0,0-1.73,1.42,3.73,3.73,0,0,0-.19,2.46c.12.58.28,1.15.4,1.73.23,1.15-.11,1.6-1.38,1.69a4.33,4.33,0,0,1-2.09-.49,9.79,9.79,0,0,1-4.51-4.32A11.89,11.89,0,0,1,8,17.1,9.53,9.53,0,0,1,11,10a7.67,7.67,0,0,1,3.07-1.74A13.26,13.26,0,0,1,18,7.68ZM13.42,20.06a1.73,1.73,0,1,0-1.71,1.71A1.73,1.73,0,0,0,13.42,20.06ZM10.05,15a1.72,1.72,0,0,0,1.72,1.74,1.73,1.73,0,0,0,0-3.47A1.72,1.72,0,0,0,10.05,15Zm12.59-3.72a1.73,1.73,0,1,0-3.47,0,1.73,1.73,0,0,0,3.47,0Zm-7,1.38a1.72,1.72,0,0,0,1.73-1.7,1.73,1.73,0,1,0-3.46,0A1.7,1.7,0,0,0,15.6,12.62Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Bühnen und Theater'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#7f4091;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#5d296b;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-50.92" cy="31.51" r="8.34" gradientTransform="translate(95.24 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>theater-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.9" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M9.55,9.5v9.84a7.73,7.73,0,1,0,15.47,0V9.5Zm2.23,6.33a2.11,2.11,0,1,1,4,0Zm5.5,8.79a5.29,5.29,0,0,1-5.26-5,8.31,8.31,0,0,0,5.26,1.64,8.31,8.31,0,0,0,5.26-1.64A5.29,5.29,0,0,1,17.29,24.62Zm5.5-8.79h-4a2.11,2.11,0,1,1,4,0Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Förderung'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#075d51;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#004036;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-118.92" cy="31.51" r="8.34" gradientTransform="translate(199.31 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>otherr-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.38" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M11.63,23.92,6,13.57l3.14-1.71a2.16,2.16,0,0,0,2.5.95ZM21,8.65a2.16,2.16,0,0,1-4.31,0H13.13V25.93H16.7a2.16,2.16,0,0,1,4.31,0h3.57V8.65Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Opern und Chöre'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#3db983;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#2b9166;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="0.07" cy="31.51" r="8.34" gradientTransform="translate(17.18 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>music-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="17.29" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M24.76,9.37V21.93a1.47,1.47,0,0,1-.38,1,2.53,2.53,0,0,1-1,.68,6.31,6.31,0,0,1-1.16.36,5,5,0,0,1-2.16,0,6.3,6.3,0,0,1-1.16-.36,2.53,2.53,0,0,1-1-.68,1.5,1.5,0,0,1,0-2,2.54,2.54,0,0,1,1-.68,6.38,6.38,0,0,1,1.16-.36,5.39,5.39,0,0,1,1.08-.12,5.2,5.2,0,0,1,2.15.44v-6l-8.61,2.66V24.8a1.48,1.48,0,0,1-.38,1,2.54,2.54,0,0,1-1,.68,6.38,6.38,0,0,1-1.16.36,5.05,5.05,0,0,1-2.16,0,6.37,6.37,0,0,1-1.16-.36,2.54,2.54,0,0,1-1-.68,1.5,1.5,0,0,1,0-2,2.54,2.54,0,0,1,1-.68A6.37,6.37,0,0,1,10,22.76a5.46,5.46,0,0,1,1.08-.12,5.21,5.21,0,0,1,2.15.44V12.24a1,1,0,0,1,.21-.63,1.1,1.1,0,0,1,.55-.4l9.33-2.87a1,1,0,0,1,.31,0,1.07,1.07,0,0,1,1.08,1.08Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Staatliche Museen zu Berlin / Stiftung Preußischer Kulturbesitz'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#999b9e;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#77797c;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-67.92" cy="31.51" r="8.34" gradientTransform="translate(121.25 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>museum-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.77" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M6.7,30.31a16.77,16.77,0,0,0,21.15,0c-.51-.78-1-1.55-1.53-2.34a1.34,1.34,0,0,1-.21-.71c0-2.67,0-8.35,0-9.88a.5.5,0,0,0-.5-.49H23.34c0,3.51,0,7.28,0,10.76H21.12c0-3.51,0-7.28,0-10.76H18.38c0,3.5,0,7.26,0,10.76H16.14c0-3.51,0-7.28,0-10.76H13.4c0,3.5,0,7.26,0,10.76H11.16c0-3.51,0-7.28,0-10.76H8.92a.49.49,0,0,0-.5.49c0,1.5,0,7,0,9.59A2.31,2.31,0,0,1,8,28.32C7.57,29,7.14,29.65,6.7,30.31Z"/><path class="cls-3" d="M17.39,8.9c1.06.62,2.11,1.26,3.17,1.87l6.1,3.48a.55.55,0,0,1-.27,1H8.16a.55.55,0,0,1-.28-1C11.09,12.41,17.11,9,17.19,8.9Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Literatur und Kino'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#239dd8;}.cls-3{fill:none;stroke:#1975a1;stroke-miterlimit:10;}.cls-4{fill:#fff;}</style><radialGradient id="radial-gradient" cx="-33.93" cy="31.51" r="8.34" gradientTransform="translate(69.22 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>cinema-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="17.03" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><circle class="cls-3" cx="17.29" cy="17.29" r="16.79"/><path class="cls-4" d="M12.39,10.78a2,2,0,1,1-2,2,2,2,0,0,1,2-2m9,0a2,2,0,1,1-2,2,2,2,0,0,1,2-2M25.53,20l-2.94,2.94V20.72a1.51,1.51,0,0,0-1.51-1.51H12.72a1.51,1.51,0,0,0-1.51,1.51v5.22a1.51,1.51,0,0,0,1.51,1.51h8.36a1.51,1.51,0,0,0,1.51-1.51V23.72l2.94,2.94h1.57V20ZM21.41,7.84a4.9,4.9,0,0,0-4.51,3,4.9,4.9,0,1,0-4.51,6.83h9a4.9,4.9,0,1,0,0-9.81Z"/></g></g></svg>`;

                    venueIcons['Archive/Bibliotheken'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#bf2351;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#94143c;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-16.93" cy="31.51" r="8.34" gradientTransform="translate(43.2 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>library-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="17.16" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M27.49,10.65V23.78a.79.79,0,0,1-.78.78H21.22V27.3l-1.37-1.37L18.47,27.3V9.86H26.7A.79.79,0,0,1,27.49,10.65ZM25.92,21H20V22.6h5.88Zm0-3.14H20v1.57h5.88Zm0-3.14H20v1.57h5.88Zm0-3.14H20v1.57h5.88ZM8.68,9.86a.78.78,0,0,0-.78.78V23.78a.79.79,0,0,0,.78.78H16.9V9.86Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Gedenkstätten'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#f7ae32;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#f39032;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="17.07" cy="31.51" r="8.34" gradientTransform="translate(-8.84 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>memorial-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="17.42" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M28.94,28.94H24.76V26.12a.44.44,0,0,0-.44-.44H22.14L21,9.9a.38.38,0,0,0-.09-.22L17.66,5.78a.53.53,0,0,0-.78,0L13.64,9.68a.38.38,0,0,0-.09.22L12.31,25.68h-2a.44.44,0,0,0-.44.44v2.81H5.64a.44.44,0,0,0-.31.13,16.77,16.77,0,0,0,23.92,0A.44.44,0,0,0,28.94,28.94Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Preußische Schlösser & Gärten'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#875f13;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#735009;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-84.92" cy="31.51" r="8.34" gradientTransform="translate(147.27 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>castle-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.64" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M24.66,25.37a1.18,1.18,0,0,1-.43-.83c0-2.65.08-5.31-.06-7.95-.08-1.58.22-2.75,1.77-3.38a.75.75,0,0,0,.33-.26,1.31,1.31,0,0,0,.3-.6c0-1.41,0-2.82,0-4.26H24.45c0,.46,0,.85,0,1.24a1.09,1.09,0,1,1-2.18,0c0-.41,0-.82,0-1.24H20.4c0,.48,0,.92,0,1.36a1.08,1.08,0,1,1-2.17,0c0-.43,0-.87,0-1.34H16.35c0,.46,0,.85,0,1.24a1.09,1.09,0,1,1-2.17,0c0-.41,0-.82,0-1.25H12.31c0,.44,0,.83,0,1.21,0,.77-.48,1.27-1.12,1.24A1.14,1.14,0,0,1,10.13,9.3c0-.39,0-.78,0-1.21H8c0,.84,0,1.63,0,2.42,0,2.76-.38,2,1.89,3.53a.94.94,0,0,1,.49.89c0,2.67-.12,5.35,0,8,.09,1.58-.32,2.64-1.77,3.31A1.14,1.14,0,0,0,8,27c0,1,0,2.75,0,4.24a16.77,16.77,0,0,0,18.58,0c0-.81,0-1.73,0-2.23C26.54,26.15,27,27,24.66,25.37Zm-5.21-2.44H15.16c0-1.51-.09-3,0-4.49a2.07,2.07,0,0,1,2.23-1.68,2.13,2.13,0,0,1,2,1.87C19.49,20,19.45,21.45,19.45,22.93Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    venueIcons['Berliner Landesmuseen'] = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 34.58 36.33" width="30" height="30"><defs><style>.cls-1{fill:url(#radial-gradient);}.cls-2{fill:#075d51;}.cls-3{fill:#fff;}.cls-4{fill:none;stroke:#004036;stroke-miterlimit:10;}</style><radialGradient id="radial-gradient" cx="-118.92" cy="31.51" r="8.34" gradientTransform="translate(199.31 20.69) scale(1.54 0.39)" gradientUnits="userSpaceOnUse"><stop offset="0"/><stop offset="1" stop-opacity="0"/></radialGradient></defs><title>otherr-shadow</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><ellipse class="cls-1" cx="16.38" cy="33.06" rx="12.83" ry="3.27"/><circle class="cls-2" cx="17.29" cy="17.29" r="16.79"/><path class="cls-3" d="M11.63,23.92,6,13.57l3.14-1.71a2.16,2.16,0,0,0,2.5.95ZM21,8.65a2.16,2.16,0,0,1-4.31,0H13.13V25.93H16.7a2.16,2.16,0,0,1,4.31,0h3.57V8.65Z"/><circle class="cls-4" cx="17.29" cy="17.29" r="16.79"/></g></g></svg>`;

                    Object.assign(window, {venueIcons});

                }());
            </script>
            <script src="~/lib/vue/vue.js"></script>
            <script>
                var app = new Vue({
                    el: "#app",
                    data: {
                        store: {
                            state: {},
                            setModel(newValue) {
                                this.state.model = newValue;
                            },
                            setIsLoading(newValue) {
                                this.state.model.is_loading = newValue;
                            }
                        }
                    },
                    methods: {
                        getSuggestedMeals() {
                            this.store.setIsLoading(true);
                            this.store.state.model.new_meal.title = "Looking for suggested meals.";
                            this.$forceUpdate();
                            let self = this;
                            $.ajax({
                                type: 'GET',
                                crossDomain: true,
                                contentType: "application/json",
                                url: '/api/MealPlan',
                                success: function (data) {
                                    self.store.state.model.new_meal.title = "Select A Meal Below."
                                    self.store.setIsLoading(false);
                                    self.store.state.model.new_meal.suggested_meals = data;
                                    self.store.state.model.new_meal.state = "select-meal-plan";
                                    self.$forceUpdate();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    self.store.setIsLoading(false);
                                    self.$forceUpdate();
                                }
                            });
                        },
                        setSuggestedMeal(item) {
                            this.store.state.model.new_meal.selected_meal = item;
                            this.store.state.model.new_meal.title = "One more step.";
                            this.store.state.model.new_meal.state = "selected-meal-plan";
                            this.$forceUpdate();
                        },
                        showMap() {
                            this.store.state.model.is_map_showing = true;
                            let app_id = "JhE0slEAzCuJc13lUwYa";
                            let app_code = "fba0yCgDHLv1L_q1neW4b-gO0I7UzUfVAT9f2QgxHvg";
                            let platform = new H.service.Platform({
                                app_id,
                                app_code,
                                useCIT: true,
                                useHTTPS: true
                            });
                            const pixelRatio = devicePixelRatio > 1 ? 2 : 1;
                            let defaultLayers = platform.createDefaultLayers({
                                tileSize: 256 * pixelRatio
                            });
                            const layers = platform.createDefaultLayers({
                                tileSize: 256 * pixelRatio,
                                ppi: pixelRatio > 1 ? 320 : 72
                            });
                            let map = new H.Map(
                                document.getElementsByClassName('dl-map')[0],
                                defaultLayers.normal.base,
                                {
                                    pixelRatio,
                                    center: new H.geo.Point(52.51, 13.34),
                                    zoom:12
                                }
                            );
                            const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
                            let ui = H.ui.UI.createDefault(map, layers);
                            ui.removeControl('mapsettings');
                            window.addEventListener('resize', function() {
                                map.getViewPort().resize();
                            });
                            // Dynamically Load Data
                            let provider = new H.datalens.RawDataProvider({
                                dataUrl: 'https://js.cit.datalens.api.here.com/datasets/cultural_facilities.csv?' + Date.now(),
                                dataToFeatures: (data) => {
                                    let parsed = helpers.parseCSV(data);
                                    let features = [];
                                    let row = null;
                                    let feature = null;
                                    for (let i = 1, l = parsed.length; i < l; i++) {
                                        row = parsed[i];
                                        feature = {
                                            'type': 'Feature',
                                            'geometry': {
                                                'type': 'Point',
                                                'coordinates': [Number(row[3]), Number(row[2])]
                                            },
                                            'properties': {
                                                'facility': row[0],
                                                'address': row[1],
                                                'SUBahn': row[8],
                                                'type':  row[11]
                                            }
                                        };
                                        features.push(feature);
                                    }
                                    return features;
                                },
                                featuresToRows: (features) => {
                                    let rows = [], feature;
                                    for (let i = 0, l = features.length; i < l; i++) {
                                        feature = features[i];
                                        rows.push([{
                                                lat: feature.geometry.coordinates[1],
                                                lng: feature.geometry.coordinates[0]
                                            },
                                            feature.properties.facility,
                                            feature.properties.address,
                                            feature.properties.SUBahn,
                                            feature.properties.type
                                        ]);
                                    }
                                    return rows;
                                }
                            });
                            let layer = new H.datalens.ObjectLayer(provider, {
                                pixelRatio: window.devicePixelRatio,
                                rowToMapObject: function (data) {
                                    let coordinates = data[0];
                                    let facility = data[1];
                                    return new H.map.Marker(coordinates);
                                },
                                rowToStyle: function (data, zoom) {
                                    if (!venueIcons[data[4]]) { return }
                                    let icon = H.datalens.ObjectLayer.createIcon(venueIcons[data[4]],
                                        {size: 30 * pixelRatio});
                                    return {icon};
                                }
                            });
                            map.addLayer(layer);
                            const format = d3.format('.2f');
                            let hoveredObject;
                            let infoBubble = new H.ui.InfoBubble({lat: 0, lng: 0}, {});
                            infoBubble.addClass('info-bubble');
                            infoBubble.close();
                            ui.addBubble(infoBubble);
                            map.addEventListener('pointermove', (e) => {
                                if (hoveredObject && hoveredObject !== e.target) {
                                    infoBubble.close();
                                }

                                hoveredObject = e.target;
                                if (hoveredObject.icon) {
                                    let row = hoveredObject.getData();
                                    if (row) {
                                        let facility = row[1];
                                        let address = row[2];
                                        let SUBahn = row[3];

                                        let pos = map.screenToGeo(
                                            e.currentPointer.viewportX,
                                            e.currentPointer.viewportY);
                                        infoBubble.setPosition(pos);
                                        infoBubble.setContent(`
                                            <div class="info-bubble-title">${facility}</div>
                                            <div class="info-bubble-label">
                                                ${address} <br />
                                                ${SUBahn}
                                            </div>`);
                                        infoBubble.open();
                                    }
                                }
                            });
                            this.$forceUpdate();
                        },
                        submitMeal() {
                            this.store.setIsLoading(true);
                            this.store.state.model.new_meal.title = "Submiting your meal plan.";
                            this.$forceUpdate();
                            let self = this;
                            let model = {
                                user_id: this.store.state.model.current_user.id,
                                budget_amount: this.store.state.model.new_meal.budget_amount,
                                meal_id: this.store.state.model.new_meal.selected_meal.id,
                                meal_date: this.store.state.model.new_meal.meal_date,
                                dependents: this.store.state.model.new_meal.number_of_people
                            }
                            $.ajax({
                                type: 'POST',
                                crossDomain: true,
                                data: JSON.stringify(model),
                                contentType: "application/json",
                                url: '/api/UserMealPlan',
                                success: function (data) {
                                    self.store.state.model.new_meal.title = "Let's make a meal plan.";
                                    self.store.state.model.new_meal.state = "meal-plan";
                                    self.store.setIsLoading(false);
                                    $('#newMealPlanModal').modal("toggle");
                                    self.$forceUpdate();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    self.store.setIsLoading(false);
                                    self.store.state.model.new_meal.title = "Something Went Wrong."
                                    self.$forceUpdate();
                                }
                            });
                        }
                    },
                    mounted() {
                    },
                    beforeMount() {
                        let model = JSON.parse($('#singleSourceOfTruth').text());
                        this.store.setModel(model);
                    }
                });
            </script>
        }
    }

}
else
{

}

